pipeline {
    agent any

    environment {
        SCANNER = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'karim', url: 'https://github.com/karim-mohamedd/Depi.git'
            }
        }
        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh '''
                        $SCANNER/bin/sonar-scanner -Dsonar.projectKey=Depi-Pipeline -Dsonar.projectName=Depi-Pipeline -Dsonar.java.binaries=.
                    '''
                }
            }
        }
        stage('Build Services') {
            parallel {
                stage('adservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/adservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/adservice'
                                sh 'docker push devilcontainer/adservice:latest'
                                sh 'docker rmi -f devilcontainer/adservice:latest'
                            }
                        }
                    }
                }
                stage('cartservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/cartservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/cartservice/src'
                                sh 'docker push devilcontainer/cartservice:latest'
                                sh 'docker rmi -f devilcontainer/cartservice:latest'
                            }
                        }
                    }
                }
                stage('checkoutservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/checkoutservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/checkoutservice'
                                sh 'docker push devilcontainer/checkoutservice:latest'
                                sh 'docker rmi -f devilcontainer/checkoutservice:latest'
                            }
                        }
                    }
                }
                stage('currencyservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/currencyservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/currencyservice'
                                sh 'docker push devilcontainer/currencyservice:latest'
                                sh 'docker rmi -f devilcontainer/currencyservice:latest'
                            }
                        }
                    }
                }
                stage('emailservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/emailservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/emailservice'
                                sh 'docker push devilcontainer/emailservice:latest'
                                sh 'docker rmi -f devilcontainer/emailservice:latest'
                            }
                        }
                    }
                }
                stage('frontend') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/frontend:latest /var/jenkins_home/workspace/Depi-Pipeline/src/frontend'
                                sh 'docker push devilcontainer/frontend:latest'
                                sh 'docker rmi -f devilcontainer/frontend:latest'
                            }
                        }
                    }
                }
                stage('loadgenerator') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/loadgenerator:latest /var/jenkins_home/workspace/Depi-Pipeline/src/loadgenerator'
                                sh 'docker push devilcontainer/loadgenerator:latest'
                                sh 'docker rmi -f devilcontainer/loadgenerator:latest'
                            }
                        }
                    }
                }
                stage('paymentservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/paymentservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/paymentservice'
                                sh 'docker push devilcontainer/paymentservice:latest'
                                sh 'docker rmi -f devilcontainer/paymentservice:latest'
                            }
                        }
                    }
                }
                stage('productcatalogservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/productcatalogservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/productcatalogservice'
                                sh 'docker push devilcontainer/productcatalogservice:latest'
                                sh 'docker rmi -f devilcontainer/productcatalogservice:latest'
                            }
                        }
                    }
                }
                stage('recommendationservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/recommendationservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/recommendationservice'
                                sh 'docker push devilcontainer/recommendationservice:latest'
                                sh 'docker rmi -f devilcontainer/recommendationservice:latest'
                            }
                        }
                    }
                }
                stage('shippingservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/shippingservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/shippingservice'
                                sh 'docker push devilcontainer/shippingservice:latest'
                                sh 'docker rmi -f devilcontainer/shippingservice:latest'
                            }
                        }
                    }
                }
                stage('shoppingassistantservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker') {
                                sh 'docker build -t devilcontainer/shoppingassistantservice:latest /var/jenkins_home/workspace/Depi-Pipeline/src/shoppingassistantservice'
                                sh 'docker push devilcontainer/shoppingassistantservice:latest'
                                sh 'docker rmi -f devilcontainer/shoppingassistantservice:latest'
                            }
                        }
                    }
                }
            }
        }
        stage('Build') {
            steps {
                echo 'Building...'
                // Your build steps here, e.g., sh 'make'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                // Your test steps here, e.g., sh 'pytest'
            }
        }
    }
    post {
        success {
            script {
                slackSend(channel: 'jenkins', message: "Build succeeded everything is ok : ${env.JOB_NAME} #${env.BUILD_NUMBER}")
            }
        }
        failure {
            script {
                slackSend(channel: 'jenkins', message: "Build failed check the error : ${env.JOB_NAME} #${env.BUILD_NUMBER}")
            }
        }
        always {
            echo 'This will always run, regardless of success or failure.'
        }
    }
}
